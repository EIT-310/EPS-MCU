<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="_log_8cpp" kind="file" language="C++">
    <compoundname>Log.cpp</compoundname>
    <includes refid="_log_8h" local="yes">Log.h</includes>
    <incdepgraph>
      <node id="1">
        <label>lib/Log/Log.cpp</label>
        <link refid="_log_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Log.h</label>
        <link refid="_log_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>mbed.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>EIT-416<sp/>on<sp/>5/2/22.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inspired<sp/>by<sp/>https://www.drdobbs.com/cpp/logging-in-c/201804215</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_log_8h" kindref="compound">Log.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="class_log_1af6071a60aa52b6c1b511f99b4bc1b8fe" kindref="member">Log::Log</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">UnbufferedSerial<sp/><ref refid="class_log_1aee5656e28873ac8316e29f13e0e50df1" kindref="member">Log::serial_</ref>(USBTX,<sp/>USBRX);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778" kindref="member">TLogLevel</ref><sp/><ref refid="class_log_1aeb290934f14369d2969cd4f50f631d28" kindref="member">Log::reporting_level_</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_log_1ab2abd944d9781f24461a70d010c3c36e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_log_1ab2abd944d9781f24461a70d010c3c36e" kindref="member">Log::Get</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778" kindref="member">TLogLevel</ref><sp/>level,<sp/>std::string<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="class_log_1ab0f16e76380bca22525b102ba0f0eac7" kindref="member">msg_</ref>.append(</highlight><highlight class="stringliteral">&quot;-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_log_1af14e8b4c37abf6be087c8be1fe395216" kindref="member">TimeToString</ref>(time(NULL)));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="class_log_1ab0f16e76380bca22525b102ba0f0eac7" kindref="member">msg_</ref>.append(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_log_1a8079bae56521b384ea87284206223f42" kindref="member">EnumToString</ref>(level)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="class_log_1ab0f16e76380bca22525b102ba0f0eac7" kindref="member">msg_</ref>.append(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>str<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="class_log_1a795b5a43b1b115d41d88149ab86c0967" kindref="member">message_level_</ref><sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30" refid="class_log_1a0fbfda88fbee5027c89f6eb121059360" refkind="member"><highlight class="normal"><ref refid="class_log_1a0fbfda88fbee5027c89f6eb121059360" kindref="member">Log::~Log</ref>()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="class_log_1aee5656e28873ac8316e29f13e0e50df1" kindref="member">serial_</ref>.write(<ref refid="class_log_1ab0f16e76380bca22525b102ba0f0eac7" kindref="member">msg_</ref>.c_str(),<sp/><ref refid="class_log_1ab0f16e76380bca22525b102ba0f0eac7" kindref="member">msg_</ref>.length());</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_log_1a8079bae56521b384ea87284206223f42" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_log_1a8079bae56521b384ea87284206223f42" kindref="member">Log::EnumToString</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778" kindref="member">TLogLevel</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(level)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778a230506cce5c68c3bac5a821c42ed3473" kindref="member">LOG_ERROR</ref>:<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ERR&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778a8f6fe15bfe15104da6d1b360194a5400" kindref="member">LOG_WARNING</ref>:<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WARN&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778a6e98ff471e3ce6c4ef2d75c37ee51837" kindref="member">LOG_INFO</ref>:<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" kindref="member">LOG_DEBUG</ref>:<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DEBUG&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_log_1af14e8b4c37abf6be087c8be1fe395216" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_log_1af14e8b4c37abf6be087c8be1fe395216" kindref="member">Log::TimeToString</ref>(time_t<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[32];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>strftime(buf,<sp/>32,<sp/></highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,<sp/>localtime(&amp;time));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str(buf);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/Log/Log.cpp"/>
  </compounddef>
</doxygen>
