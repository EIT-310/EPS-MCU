<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="yes">mbed.h</includes>
    <includes refid="_fsm_8h" local="yes">Fsm.h</includes>
    <includes refid="_n_v_store_8h" local="yes">NVStore.h</includes>
    <includes refid="_adc_read_8h" local="yes">AdcRead.h</includes>
    <includes local="yes">mbed_stats.h</includes>
    <includes refid="_project_config_8h" local="no">ProjectConfig.h</includes>
    <includes refid="_interrupt_8h" local="yes">Interrupt.h</includes>
    <includes refid="_power_manage_8h" local="yes">PowerManage.h</includes>
    <includes refid="_log_8h" local="yes">Log.h</includes>
    <includes refid="_can_com_8h" local="yes">CanCom.h</includes>
    <includes refid="reading_8pb_8h" local="yes">reading.pb.h</includes>
    <includes refid="_no_mutex_c_a_n_8h" local="yes">NoMutexCAN.h</includes>
    <includes local="yes">rtos.h</includes>
    <incdepgraph>
      <node id="6">
        <label>AdcRead.h</label>
        <link refid="_adc_read_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>CanCom.h</label>
        <link refid="_can_com_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ProjectConfig.h</label>
        <link refid="_project_config_8h"/>
      </node>
      <node id="3">
        <label>Fsm.h</label>
        <link refid="_fsm_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Interrupt.h</label>
        <link refid="_interrupt_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Log.h</label>
        <link refid="_log_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>NVStore.h</label>
        <link refid="_n_v_store_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>NoMutexCAN.h</label>
        <link refid="_no_mutex_c_a_n_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>PowerManage.h</label>
        <link refid="_power_manage_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>reading.pb.h</label>
        <link refid="reading_8pb_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>FlashIAPBlockDevice.h</label>
      </node>
      <node id="9">
        <label>TDBStore.h</label>
      </node>
      <node id="2">
        <label>mbed.h</label>
      </node>
      <node id="10">
        <label>mbed_stats.h</label>
      </node>
      <node id="14">
        <label>pb.h</label>
      </node>
      <node id="15">
        <label>pb_decode.h</label>
      </node>
      <node id="16">
        <label>rtos.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1a9f4267ec33e4521e3429fe3c8d933a04" prot="public" static="no" mutable="no">
        <type><ref refid="class_fsm" kindref="compound">Fsm</ref></type>
        <definition>Fsm fsm(FSM_START_STATE)</definition>
        <argsstring>(FSM_START_STATE)</argsstring>
        <name>fsm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="15" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25" prot="public" static="no" mutable="no">
        <type>EventQueue</type>
        <definition>EventQueue IsrQueue</definition>
        <argsstring></argsstring>
        <name>IsrQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="16" column="12" bodyfile="src/main.cpp" bodystart="16" bodyend="-1"/>
        <referencedby refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" compoundref="main_8cpp" startline="69" endline="80">OnCanRec</referencedby>
        <referencedby refid="main_8cpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="87" endline="96">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a63a2d7bfab07ad56bcc616708e1311d8" prot="public" static="no" mutable="no">
        <type>EventQueue</type>
        <definition>EventQueue AdcQueue</definition>
        <argsstring></argsstring>
        <name>AdcQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="17" column="5" bodyfile="src/main.cpp" bodystart="17" bodyend="-1"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="173" endline="185">main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a0ed0a336fad3c78ff60cde0dc0ba0757" prot="public" static="no" mutable="no">
        <type><ref refid="class_no_mutex_c_a_n" kindref="compound">NoMutexCAN</ref></type>
        <definition>CanCom cancom &amp; can</definition>
        <argsstring>(CAN_RD_PIN, CAN_TD_PIN, CAN_BITRATE)</argsstring>
        <name>can</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="18" column="12" bodyfile="src/main.cpp" bodystart="27" bodyend="-1"/>
        <referencedby refid="class_can_com_1a71c4eb082e8abbb9e06a7b0afaf58fb3" compoundref="_can_com_8h" startline="17" endline="19">CanCom::CanCom</referencedby>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="173" endline="185">main</referencedby>
        <referencedby refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" compoundref="main_8cpp" startline="69" endline="80">OnCanRec</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237" prot="public" static="no" mutable="no">
        <type>Watchdog &amp;</type>
        <definition>Watchdog&amp; watchdog</definition>
        <argsstring></argsstring>
        <name>watchdog</name>
        <initializer>= Watchdog::get_instance()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="19" column="10" bodyfile="src/main.cpp" bodystart="19" bodyend="-1"/>
        <referencedby refid="main_8cpp_1a5c7452bc8a6f648db67fe952474d73de" compoundref="main_8cpp" startline="104" endline="116">StartWatchdog</referencedby>
        <referencedby refid="main_8cpp_1a1344d6ffed8b15af8c18dd7aa69d4872" compoundref="main_8cpp" startline="158" endline="165">UpdateSubs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a6455c2bdd533574c68e203f7d1e3265d" prot="public" static="no" mutable="no">
        <type>CANMessage</type>
        <definition>CANMessage can_time_sync</definition>
        <argsstring></argsstring>
        <name>can_time_sync</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="20" column="12" bodyfile="src/main.cpp" bodystart="20" bodyend="-1"/>
        <referencedby refid="main_8cpp_1a051cb0babede35842fcb4822fe9102f7" compoundref="main_8cpp" startline="38" endline="44">CanTimeSync</referencedby>
        <referencedby refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" compoundref="main_8cpp" startline="69" endline="80">OnCanRec</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ac8fa5b302ff73f9e90ee35405b112748" prot="public" static="no" mutable="no">
        <type>CANMessage</type>
        <definition>CANMessage can_req</definition>
        <argsstring></argsstring>
        <name>can_req</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="20" column="26" bodyfile="src/main.cpp" bodystart="20" bodyend="-1"/>
        <referencedby refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" compoundref="main_8cpp" startline="69" endline="80">OnCanRec</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1adaedeffa9cd68dc76b50e18ac30de0a9" prot="public" static="no" mutable="no">
        <type>Ticker</type>
        <definition>Ticker adc_ticker</definition>
        <argsstring></argsstring>
        <name>adc_ticker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="25" column="8" bodyfile="src/main.cpp" bodystart="25" bodyend="-1"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="173" endline="185">main</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a98c8c86c1543fd5370047f525d0a1f31" prot="public" static="no" mutable="no">
        <type>Mail&lt; <ref refid="struct_adc_read_1_1adc__reading" kindref="compound">AdcRead::adc_reading</ref>, 8 &gt;</type>
        <definition>Mail&lt;AdcRead::adc_reading, 8&gt; adc_mail</definition>
        <argsstring></argsstring>
        <name>adc_mail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="28" column="6" bodyfile="src/main.cpp" bodystart="28" bodyend="-1"/>
        <referencedby refid="main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0" compoundref="main_8cpp" startline="137" endline="150">NewState</referencedby>
        <referencedby refid="main_8cpp_1ac595faede462d70c3fb34417f4e984e7" compoundref="main_8cpp" startline="125" endline="130">ReadAdc</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a16cedde881cfcbc26c9fb4f2ff54e033" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool can_time_isr</definition>
        <argsstring></argsstring>
        <name>can_time_isr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="29" column="6" bodyfile="src/main.cpp" bodystart="29" bodyend="-1"/>
        <referencedby refid="main_8cpp_1abedbe52be05e887351f9d26921ff77cf" compoundref="main_8cpp" startline="53" endline="63">CanHandler</referencedby>
        <referencedby refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" compoundref="main_8cpp" startline="69" endline="80">OnCanRec</referencedby>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aff54455fc158126cb45ff4d8c55fa910" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool can_req_isr</definition>
        <argsstring></argsstring>
        <name>can_req_isr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="29" column="19" bodyfile="src/main.cpp" bodystart="29" bodyend="-1"/>
        <referencedby refid="main_8cpp_1abedbe52be05e887351f9d26921ff77cf" compoundref="main_8cpp" startline="53" endline="63">CanHandler</referencedby>
        <referencedby refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" compoundref="main_8cpp" startline="69" endline="80">OnCanRec</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a8088721061b22d3a703b809282db158a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Thread</type>
        <definition>Thread t_can_handler</definition>
        <argsstring>(osPriorityNormal, OS_STACK_SIZE, nullptr,&quot;CAN Handler&quot;)</argsstring>
        <name>t_can_handler</name>
        <param>
          <type>osPriorityNormal</type>
        </param>
        <param>
          <type>OS_STACK_SIZE</type>
        </param>
        <param>
          <type>nullptr</type>
        </param>
        <param>
          <type>&quot;CAN Handler&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="21" column="8"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a9da7aec02ec673a8b5ecdf4510f106c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Thread</type>
        <definition>Thread t_ISR_handler</definition>
        <argsstring>(osPriorityISR, 1024, nullptr, &quot;OCE Handler&quot;)</argsstring>
        <name>t_ISR_handler</name>
        <param>
          <type>osPriorityISR</type>
        </param>
        <param>
          <type>1024</type>
        </param>
        <param>
          <type>nullptr</type>
        </param>
        <param>
          <type>&quot;OCE Handler&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="22" column="5"/>
        <referencedby refid="main_8cpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="87" endline="96">Setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a3954245cb9a4c741ae774426178b1817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Thread</type>
        <definition>Thread t_adc_main</definition>
        <argsstring>(osPriorityNormal, 1024, nullptr,&quot;ADC Handler&quot;)</argsstring>
        <name>t_adc_main</name>
        <param>
          <type>osPriorityNormal</type>
        </param>
        <param>
          <type>1024</type>
        </param>
        <param>
          <type>nullptr</type>
        </param>
        <param>
          <type>&quot;ADC Handler&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="23" column="5"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="173" endline="185">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1aa4f4ec1bad01c8e84c6122eccfb9bbe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Thread</type>
        <definition>Thread t_state_subs</definition>
        <argsstring>(osPriorityNormal, 1024, nullptr,&quot;State Updater&quot;)</argsstring>
        <name>t_state_subs</name>
        <param>
          <type>osPriorityNormal</type>
        </param>
        <param>
          <type>1024</type>
        </param>
        <param>
          <type>nullptr</type>
        </param>
        <param>
          <type>&quot;State Updater&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="24" column="5" declfile="src/main.cpp" declline="24" declcolumn="5"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="173" endline="185">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a6c214e618015d093ba8590729563c33c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_oce_isr" kindref="compound">OceIsr</ref></type>
        <definition>OceIsr oce1</definition>
        <argsstring>(OCE_1_PIN, &amp;IsrQueue, PowerManage::SUB_1)</argsstring>
        <name>oce1</name>
        <param>
          <type>OCE_1_PIN</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>IsrQueue</declname>
        </param>
        <param>
          <type><ref refid="class_power_manage_1a1f54cee055bd53d7a4e29f04d86e292eab2f595058775d24b388a331e4cef6bd6" kindref="member">PowerManage::SUB_1</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="26" column="8" declfile="src/main.cpp" declline="26" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ac595faede462d70c3fb34417f4e984e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReadAdc</definition>
        <argsstring>()</argsstring>
        <name>ReadAdc</name>
        <briefdescription>
<para>Sætter ADC måling igang. Kører hvert 5. sekundt med mindre en vigtigere thread pre-empt&apos;er den. Lægger den nye måling i kø til <ref refid="main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0" kindref="member">NewState()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="125" column="6" bodyfile="src/main.cpp" bodystart="125" bodyend="130" declfile="src/main.cpp" declline="30" declcolumn="6"/>
        <references refid="main_8cpp_1a98c8c86c1543fd5370047f525d0a1f31" compoundref="main_8cpp" startline="28">adc_mail</references>
        <references refid="class_adc_read_1ad802d7cd5058ceb3a039803f8fb18958" compoundref="_adc_read_8cpp" startline="23" endline="55">AdcRead::DoRead</references>
        <references refid="_log_8h_1a45213472c513e9160481979a237b50fe" compoundref="_log_8h" startline="35">LOG</references>
        <references refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" compoundref="_log_8h" startline="9">LOG_DEBUG</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="173" endline="185">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a1344d6ffed8b15af8c18dd7aa69d4872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UpdateSubs</definition>
        <argsstring>()</argsstring>
        <name>UpdateSubs</name>
        <briefdescription>
<para>Opdaterer de aktiverede moduler på baggrund af ny state og kicker watchdog. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="158" column="6" bodyfile="src/main.cpp" bodystart="158" bodyend="165" declfile="src/main.cpp" declline="31" declcolumn="6"/>
        <references refid="_log_8h_1a45213472c513e9160481979a237b50fe" compoundref="_log_8h" startline="35">LOG</references>
        <references refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" compoundref="_log_8h" startline="9">LOG_DEBUG</references>
        <references refid="class_power_manage_1a6cc478738b54fbbd148122c4ae6e93fb" compoundref="_power_manage_8cpp" startline="20" endline="65">PowerManage::UpdateEnabled</references>
        <references refid="main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237" compoundref="main_8cpp" startline="19">watchdog</references>
        <referencedby refid="main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0" compoundref="main_8cpp" startline="137" endline="150">NewState</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a5c7452bc8a6f648db67fe952474d73de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void StartWatchdog</definition>
        <argsstring>()</argsstring>
        <name>StartWatchdog</name>
        <briefdescription>
<para>Starter Watchdog hvis timeout er for langt sættes den istedet til den længste tilladte værdi. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="104" column="6" bodyfile="src/main.cpp" bodystart="104" bodyend="116" declfile="src/main.cpp" declline="32" declcolumn="6"/>
        <references refid="_log_8h_1a45213472c513e9160481979a237b50fe" compoundref="_log_8h" startline="35">LOG</references>
        <references refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" compoundref="_log_8h" startline="9">LOG_DEBUG</references>
        <references refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778a8f6fe15bfe15104da6d1b360194a5400" compoundref="_log_8h" startline="9">LOG_WARNING</references>
        <references refid="main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237" compoundref="main_8cpp" startline="19">watchdog</references>
        <references refid="_project_config_8h_1abf89628d486477bd0db5a5890cd38a05" compoundref="_project_config_8h" startline="43">WATCHDOG_TIMEOUT</references>
        <referencedby refid="main_8cpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="87" endline="96">Setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a051cb0babede35842fcb4822fe9102f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CanTimeSync</definition>
        <argsstring>()</argsstring>
        <name>CanTimeSync</name>
        <briefdescription>
<para>ISR deferred handler for at decode time sync package og opdatere RTC med den modtagede værdi. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="38" column="6" bodyfile="src/main.cpp" bodystart="38" bodyend="44"/>
        <references refid="main_8cpp_1a6455c2bdd533574c68e203f7d1e3265d" compoundref="main_8cpp" startline="20">can_time_sync</references>
        <references refid="struct__time__sync_1ab31a0cceb2a784fb21b0727848a355c6" compoundref="reading_8pb_8h" startline="28">_time_sync::current_time</references>
        <references refid="reading_8pb_8h_1a600c302fd20ee5bafbbf504dcc13f7ba" compoundref="reading_8pb_8h" startline="74">time_sync_fields</references>
        <referencedby refid="main_8cpp_1abedbe52be05e887351f9d26921ff77cf" compoundref="main_8cpp" startline="53" endline="63">CanHandler</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1abedbe52be05e887351f9d26921ff77cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CanHandler</definition>
        <argsstring>()</argsstring>
        <name>CanHandler</name>
        <briefdescription>
<para>ISR deferred handler der reagerer på flag fra <ref refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" kindref="member">OnCanRec()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Lettere overflødig og lævn fra tidligere metode uden brug af EventQueue </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="53" column="6" bodyfile="src/main.cpp" bodystart="53" bodyend="63"/>
        <references refid="main_8cpp_1aff54455fc158126cb45ff4d8c55fa910" compoundref="main_8cpp" startline="29">can_req_isr</references>
        <references refid="main_8cpp_1a16cedde881cfcbc26c9fb4f2ff54e033" compoundref="main_8cpp" startline="29">can_time_isr</references>
        <references refid="main_8cpp_1a051cb0babede35842fcb4822fe9102f7" compoundref="main_8cpp" startline="38" endline="44">CanTimeSync</references>
        <references refid="_log_8h_1a45213472c513e9160481979a237b50fe" compoundref="_log_8h" startline="35">LOG</references>
        <references refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" compoundref="_log_8h" startline="9">LOG_DEBUG</references>
        <references refid="class_can_com_1ad5cc018603f898163b52bcab6db64cf4" compoundref="_can_com_8cpp" startline="28" endline="66">CanCom::SendReadings</references>
        <referencedby refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" compoundref="main_8cpp" startline="69" endline="80">OnCanRec</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OnCanRec</definition>
        <argsstring>()</argsstring>
        <name>OnCanRec</name>
        <briefdescription>
<para>ISR deferred handler til at beslutte handling på baggrund af CAN framets ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="69" column="6" bodyfile="src/main.cpp" bodystart="69" bodyend="80"/>
        <references refid="main_8cpp_1a0ed0a336fad3c78ff60cde0dc0ba0757" compoundref="main_8cpp" startline="27">can</references>
        <references refid="class_can_com_1a7787f4671b34026b7da18d0f4a5bdaf7a30e6d10fcb5e05f9db8ae29bfff705e4" compoundref="_can_com_8h" startline="25">CanCom::CAN_GET_READING</references>
        <references refid="main_8cpp_1ac8fa5b302ff73f9e90ee35405b112748" compoundref="main_8cpp" startline="20">can_req</references>
        <references refid="main_8cpp_1aff54455fc158126cb45ff4d8c55fa910" compoundref="main_8cpp" startline="29">can_req_isr</references>
        <references refid="main_8cpp_1a16cedde881cfcbc26c9fb4f2ff54e033" compoundref="main_8cpp" startline="29">can_time_isr</references>
        <references refid="class_can_com_1a7787f4671b34026b7da18d0f4a5bdaf7a4339db1a5ddb8376463676d939baeb50" compoundref="_can_com_8h" startline="22">CanCom::CAN_TIME_SYNC</references>
        <references refid="main_8cpp_1a6455c2bdd533574c68e203f7d1e3265d" compoundref="main_8cpp" startline="20">can_time_sync</references>
        <references refid="main_8cpp_1abedbe52be05e887351f9d26921ff77cf" compoundref="main_8cpp" startline="53" endline="63">CanHandler</references>
        <references refid="main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25" compoundref="main_8cpp" startline="16">IsrQueue</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="173" endline="185">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a769404f2985a027a0d626fedfd4de1e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Setup</definition>
        <argsstring>()</argsstring>
        <name>Setup</name>
        <briefdescription>
<para>Køres en enkelt gang når systemet starter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="87" column="6" bodyfile="src/main.cpp" bodystart="87" bodyend="96"/>
        <references refid="main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25" compoundref="main_8cpp" startline="16">IsrQueue</references>
        <references refid="_project_config_8h_1a0b87e0d3bf5853bcbb0b66a7c48fdc05" compoundref="_project_config_8h" startline="48">LOG_LEVEL</references>
        <references refid="class_log_1aeb290934f14369d2969cd4f50f631d28" compoundref="_log_8h" startline="23">Log::reporting_level_</references>
        <references refid="class_log_1aee5656e28873ac8316e29f13e0e50df1" compoundref="_log_8h" startline="19">Log::serial_</references>
        <references refid="main_8cpp_1a5c7452bc8a6f648db67fe952474d73de" compoundref="main_8cpp" startline="104" endline="116">StartWatchdog</references>
        <references refid="main_8cpp_1a9da7aec02ec673a8b5ecdf4510f106c1">t_ISR_handler</references>
        <references refid="class_power_manage_1a6cc478738b54fbbd148122c4ae6e93fb" compoundref="_power_manage_8cpp" startline="20" endline="65">PowerManage::UpdateEnabled</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="173" endline="185">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NewState</definition>
        <argsstring>()</argsstring>
        <name>NewState</name>
        <briefdescription>
<para>Modtager ny måling fra <ref refid="main_8cpp_1ac595faede462d70c3fb34417f4e984e7" kindref="member">ReadAdc()</ref> og bestemmer ny state på baggrund af disse data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="137" column="6" bodyfile="src/main.cpp" bodystart="137" bodyend="150"/>
        <references refid="main_8cpp_1a98c8c86c1543fd5370047f525d0a1f31" compoundref="main_8cpp" startline="28">adc_mail</references>
        <references refid="class_fsm_1a68a3b3e4232132f9e671eafb4a663af4" compoundref="_fsm_8cpp" startline="111" endline="145">Fsm::DetermineState</references>
        <references refid="_log_8h_1a45213472c513e9160481979a237b50fe" compoundref="_log_8h" startline="35">LOG</references>
        <references refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" compoundref="_log_8h" startline="9">LOG_DEBUG</references>
        <references refid="main_8cpp_1a1344d6ffed8b15af8c18dd7aa69d4872" compoundref="main_8cpp" startline="158" endline="165">UpdateSubs</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="173" endline="185">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
<para>Sætter threads igang og sover. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int standard </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.cpp" line="173" column="5" bodyfile="src/main.cpp" bodystart="173" bodyend="185"/>
        <references refid="main_8cpp_1adaedeffa9cd68dc76b50e18ac30de0a9" compoundref="main_8cpp" startline="25">adc_ticker</references>
        <references refid="main_8cpp_1a63a2d7bfab07ad56bcc616708e1311d8" compoundref="main_8cpp" startline="17">AdcQueue</references>
        <references refid="main_8cpp_1a0ed0a336fad3c78ff60cde0dc0ba0757" compoundref="main_8cpp" startline="27">can</references>
        <references refid="_log_8h_1a45213472c513e9160481979a237b50fe" compoundref="_log_8h" startline="35">LOG</references>
        <references refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778a6e98ff471e3ce6c4ef2d75c37ee51837" compoundref="_log_8h" startline="9">LOG_INFO</references>
        <references refid="main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0" compoundref="main_8cpp" startline="137" endline="150">NewState</references>
        <references refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" compoundref="main_8cpp" startline="69" endline="80">OnCanRec</references>
        <references refid="main_8cpp_1ac595faede462d70c3fb34417f4e984e7" compoundref="main_8cpp" startline="125" endline="130">ReadAdc</references>
        <references refid="main_8cpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="87" endline="96">Setup</references>
        <references refid="main_8cpp_1a3954245cb9a4c741ae774426178b1817">t_adc_main</references>
        <references refid="main_8cpp_1aa4f4ec1bad01c8e84c6122eccfb9bbe7">t_state_subs</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;mbed.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_fsm_8h" kindref="compound">Fsm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_v_store_8h" kindref="compound">NVStore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_adc_read_8h" kindref="compound">AdcRead.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mbed_stats.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_project_config_8h" kindref="compound">ProjectConfig.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_interrupt_8h" kindref="compound">Interrupt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_power_manage_8h" kindref="compound">PowerManage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_log_8h" kindref="compound">Log.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_can_com_8h" kindref="compound">CanCom.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reading_8pb_8h" kindref="compound">reading.pb.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_no_mutex_c_a_n_8h" kindref="compound">NoMutexCAN.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rtos.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="main_8cpp_1a9f4267ec33e4521e3429fe3c8d933a04" refkind="member"><highlight class="normal"><ref refid="class_fsm" kindref="compound">Fsm</ref><sp/><ref refid="main_8cpp_1a9f4267ec33e4521e3429fe3c8d933a04" kindref="member">fsm</ref>(<ref refid="_project_config_8h_1a69780fe091bc441b276e79d89f7acb97" kindref="member">FSM_START_STATE</ref>);</highlight></codeline>
<codeline lineno="16" refid="main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25" refkind="member"><highlight class="normal">EventQueue<sp/><ref refid="main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25" kindref="member">IsrQueue</ref>,</highlight></codeline>
<codeline lineno="17" refid="main_8cpp_1a63a2d7bfab07ad56bcc616708e1311d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a63a2d7bfab07ad56bcc616708e1311d8" kindref="member">AdcQueue</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="class_no_mutex_c_a_n" kindref="compound">NoMutexCAN</ref><sp/><ref refid="main_8cpp_1a0ed0a336fad3c78ff60cde0dc0ba0757" kindref="member">can</ref>(CAN_RD_PIN,<sp/>CAN_TD_PIN,<sp/><ref refid="_project_config_8h_1a936618a4fbd892618b0865b86a1fb22c" kindref="member">CAN_BITRATE</ref>);</highlight></codeline>
<codeline lineno="19" refid="main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237" refkind="member"><highlight class="normal">Watchdog<sp/>&amp;<ref refid="main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237" kindref="member">watchdog</ref><sp/>=<sp/>Watchdog::get_instance();</highlight></codeline>
<codeline lineno="20" refid="main_8cpp_1ac8fa5b302ff73f9e90ee35405b112748" refkind="member"><highlight class="normal">CANMessage<sp/><ref refid="main_8cpp_1a6455c2bdd533574c68e203f7d1e3265d" kindref="member">can_time_sync</ref>,<sp/><ref refid="main_8cpp_1ac8fa5b302ff73f9e90ee35405b112748" kindref="member">can_req</ref>;</highlight></codeline>
<codeline lineno="21" refid="main_8cpp_1a8088721061b22d3a703b809282db158a" refkind="member"><highlight class="normal">Thread<sp/><ref refid="main_8cpp_1a8088721061b22d3a703b809282db158a" kindref="member">t_can_handler</ref>(osPriorityNormal,OS_STACK_SIZE,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;CAN<sp/>Handler&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="22" refid="main_8cpp_1a9da7aec02ec673a8b5ecdf4510f106c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a9da7aec02ec673a8b5ecdf4510f106c1" kindref="member">t_ISR_handler</ref>(osPriorityISR,<sp/>1024,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;OCE<sp/>Handler&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="23" refid="main_8cpp_1a3954245cb9a4c741ae774426178b1817" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a3954245cb9a4c741ae774426178b1817" kindref="member">t_adc_main</ref>(osPriorityNormal,1024,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ADC<sp/>Handler&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="24" refid="main_8cpp_1aa4f4ec1bad01c8e84c6122eccfb9bbe7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1aa4f4ec1bad01c8e84c6122eccfb9bbe7" kindref="member">t_state_subs</ref>(osPriorityNormal,<sp/>1024,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;State<sp/>Updater&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25" refid="main_8cpp_1adaedeffa9cd68dc76b50e18ac30de0a9" refkind="member"><highlight class="normal">Ticker<sp/><ref refid="main_8cpp_1adaedeffa9cd68dc76b50e18ac30de0a9" kindref="member">adc_ticker</ref>;</highlight></codeline>
<codeline lineno="26" refid="main_8cpp_1a6c214e618015d093ba8590729563c33c" refkind="member"><highlight class="normal"><ref refid="class_oce_isr" kindref="compound">OceIsr</ref><sp/><ref refid="main_8cpp_1a6c214e618015d093ba8590729563c33c" kindref="member">oce1</ref>(OCE_1_PIN,<sp/>&amp;<ref refid="main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25" kindref="member">IsrQueue</ref>,<sp/><ref refid="class_power_manage_1a1f54cee055bd53d7a4e29f04d86e292eab2f595058775d24b388a331e4cef6bd6" kindref="member">PowerManage::SUB_1</ref>);</highlight></codeline>
<codeline lineno="27" refid="main_8cpp_1a0ed0a336fad3c78ff60cde0dc0ba0757" refkind="member"><highlight class="normal"><ref refid="class_can_com" kindref="compound">CanCom</ref><sp/>cancom(&amp;<ref refid="main_8cpp_1a0ed0a336fad3c78ff60cde0dc0ba0757" kindref="member">can</ref>);</highlight></codeline>
<codeline lineno="28" refid="main_8cpp_1a98c8c86c1543fd5370047f525d0a1f31" refkind="member"><highlight class="normal">Mail&lt;AdcRead::adc_reading,<sp/>8&gt;<sp/><ref refid="main_8cpp_1a98c8c86c1543fd5370047f525d0a1f31" kindref="member">adc_mail</ref>;</highlight></codeline>
<codeline lineno="29" refid="main_8cpp_1aff54455fc158126cb45ff4d8c55fa910" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a16cedde881cfcbc26c9fb4f2ff54e033" kindref="member">can_time_isr</ref>,<sp/><ref refid="main_8cpp_1aff54455fc158126cb45ff4d8c55fa910" kindref="member">can_req_isr</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ac595faede462d70c3fb34417f4e984e7" kindref="member">ReadAdc</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a1344d6ffed8b15af8c18dd7aa69d4872" kindref="member">UpdateSubs</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a5c7452bc8a6f648db67fe952474d73de" kindref="member">StartWatchdog</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="main_8cpp_1a051cb0babede35842fcb4822fe9102f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a051cb0babede35842fcb4822fe9102f7" kindref="member">CanTimeSync</ref>(){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="struct__time__sync" kindref="compound">time_sync</ref><sp/>time_packet;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>pb_istream_t<sp/>decode<sp/>=<sp/>pb_istream_from_buffer(\</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a6455c2bdd533574c68e203f7d1e3265d" kindref="member">can_time_sync</ref>.data,<sp/><ref refid="main_8cpp_1a6455c2bdd533574c68e203f7d1e3265d" kindref="member">can_time_sync</ref>.len);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>pb_decode(&amp;decode,<sp/><ref refid="reading_8pb_8h_1a600c302fd20ee5bafbbf504dcc13f7ba" kindref="member">time_sync_fields</ref>,<sp/>&amp;time_packet);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>set_time(time_packet.<ref refid="struct__time__sync_1ab31a0cceb2a784fb21b0727848a355c6" kindref="member">current_time</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="main_8cpp_1abedbe52be05e887351f9d26921ff77cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1abedbe52be05e887351f9d26921ff77cf" kindref="member">CanHandler</ref>(){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1a16cedde881cfcbc26c9fb4f2ff54e033" kindref="member">can_time_isr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a45213472c513e9160481979a237b50fe" kindref="member">LOG</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" kindref="member">LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>Time<sp/>Sync<sp/>CAN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a16cedde881cfcbc26c9fb4f2ff54e033" kindref="member">can_time_isr</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a051cb0babede35842fcb4822fe9102f7" kindref="member">CanTimeSync</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1aff54455fc158126cb45ff4d8c55fa910" kindref="member">can_req_isr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a45213472c513e9160481979a237b50fe" kindref="member">LOG</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" kindref="member">LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>Read<sp/>Req<sp/>CAN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1aff54455fc158126cb45ff4d8c55fa910" kindref="member">can_req_isr</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_can_com_1ad5cc018603f898163b52bcab6db64cf4" kindref="member">CanCom::SendReadings</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" kindref="member">OnCanRec</ref>()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>CANMessage<sp/>buf;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1a0ed0a336fad3c78ff60cde0dc0ba0757" kindref="member">can</ref>.read(buf);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf.id<sp/>==<sp/><ref refid="class_can_com_1a7787f4671b34026b7da18d0f4a5bdaf7a4339db1a5ddb8376463676d939baeb50" kindref="member">CanCom::CAN_TIME_SYNC</ref>){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a16cedde881cfcbc26c9fb4f2ff54e033" kindref="member">can_time_isr</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a6455c2bdd533574c68e203f7d1e3265d" kindref="member">can_time_sync</ref><sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf.id<sp/>==<sp/><ref refid="class_can_com_1a7787f4671b34026b7da18d0f4a5bdaf7a30e6d10fcb5e05f9db8ae29bfff705e4" kindref="member">CanCom::CAN_GET_READING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1aff54455fc158126cb45ff4d8c55fa910" kindref="member">can_req_isr</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1ac8fa5b302ff73f9e90ee35405b112748" kindref="member">can_req</ref><sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25" kindref="member">IsrQueue</ref>.call(&amp;<ref refid="main_8cpp_1abedbe52be05e887351f9d26921ff77cf" kindref="member">CanHandler</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="main_8cpp_1a769404f2985a027a0d626fedfd4de1e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a769404f2985a027a0d626fedfd4de1e9" kindref="member">Setup</ref>(){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>læs<sp/>module_override<sp/>fra<sp/>NVM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="class_log_1aee5656e28873ac8316e29f13e0e50df1" kindref="member">Log::serial_</ref>.format(8,<sp/>SerialBase::None,<sp/>1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="class_log_1aeb290934f14369d2969cd4f50f631d28" kindref="member">Log::reporting_level_</ref><sp/>=<sp/><ref refid="_project_config_8h_1a0b87e0d3bf5853bcbb0b66a7c48fdc05" kindref="member">LOG_LEVEL</ref>;<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Hent<sp/>fra<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>time_t<sp/>now<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>anmod<sp/>om<sp/>tid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>set_time(now);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1a9da7aec02ec673a8b5ecdf4510f106c1" kindref="member">t_ISR_handler</ref>.start(callback(&amp;<ref refid="main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25" kindref="member">IsrQueue</ref>,<sp/>&amp;EventQueue::dispatch_forever));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1a5c7452bc8a6f648db67fe952474d73de" kindref="member">StartWatchdog</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="class_power_manage_1a6cc478738b54fbbd148122c4ae6e93fb" kindref="member">PowerManage::UpdateEnabled</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="main_8cpp_1a5c7452bc8a6f648db67fe952474d73de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a5c7452bc8a6f648db67fe952474d73de" kindref="member">StartWatchdog</ref>(){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Start<sp/>Watchdog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>uint32_t<sp/>max_timeout<sp/>=<sp/><ref refid="main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237" kindref="member">watchdog</ref>.get_max_timeout();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_project_config_8h_1abf89628d486477bd0db5a5890cd38a05" kindref="member">WATCHDOG_TIMEOUT</ref><sp/>&gt;<sp/>max_timeout)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a45213472c513e9160481979a237b50fe" kindref="member">LOG</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778a8f6fe15bfe15104da6d1b360194a5400" kindref="member">LOG_WARNING</ref>,</highlight><highlight class="stringliteral">&quot;Watchdog<sp/>timeout<sp/>too<sp/>long,<sp/>setting<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(max_timeout));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a45213472c513e9160481979a237b50fe" kindref="member">LOG</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" kindref="member">LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>watchdog<sp/>with<sp/>timeout<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(max_timeout));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237" kindref="member">watchdog</ref>.start(max_timeout);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a45213472c513e9160481979a237b50fe" kindref="member">LOG</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" kindref="member">LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>watchdog<sp/>with<sp/>timeout<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="_project_config_8h_1abf89628d486477bd0db5a5890cd38a05" kindref="member">WATCHDOG_TIMEOUT</ref>));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237" kindref="member">watchdog</ref>.start(<ref refid="_project_config_8h_1abf89628d486477bd0db5a5890cd38a05" kindref="member">WATCHDOG_TIMEOUT</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="main_8cpp_1ac595faede462d70c3fb34417f4e984e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ac595faede462d70c3fb34417f4e984e7" kindref="member">ReadAdc</ref>(){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="_log_8h_1a45213472c513e9160481979a237b50fe" kindref="member">LOG</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" kindref="member">LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>ADC<sp/>values<sp/>by<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Read<sp/>ADC<sp/>Values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="struct_adc_read_1_1adc__reading" kindref="compound">AdcRead::adc_reading</ref><sp/>new_read<sp/>=<sp/><ref refid="class_adc_read_1ad802d7cd5058ceb3a039803f8fb18958" kindref="member">AdcRead::DoRead</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1a98c8c86c1543fd5370047f525d0a1f31" kindref="member">adc_mail</ref>.put(&amp;new_read);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0" kindref="member">NewState</ref>(){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8cpp_1a98c8c86c1543fd5370047f525d0a1f31" kindref="member">adc_mail</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ThisThread::sleep_for(500ms);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_adc_read_1_1adc__reading" kindref="compound">AdcRead::adc_reading</ref><sp/>*new_read<sp/>=<sp/><ref refid="main_8cpp_1a98c8c86c1543fd5370047f525d0a1f31" kindref="member">adc_mail</ref>.try_get();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a45213472c513e9160481979a237b50fe" kindref="member">LOG</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" kindref="member">LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Updating<sp/>state<sp/>by<sp/>ADC<sp/>readings&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Set<sp/>new<sp/>State</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fsm_1a68a3b3e4232132f9e671eafb4a663af4" kindref="member">Fsm::DetermineState</ref>(*new_read);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a1344d6ffed8b15af8c18dd7aa69d4872" kindref="member">UpdateSubs</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="main_8cpp_1a1344d6ffed8b15af8c18dd7aa69d4872" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1a1344d6ffed8b15af8c18dd7aa69d4872" kindref="member">UpdateSubs</ref>(){</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="_log_8h_1a45213472c513e9160481979a237b50fe" kindref="member">LOG</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" kindref="member">LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Updating<sp/>enabled<sp/>power<sp/>rails<sp/>by<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Update<sp/>enabled<sp/>rails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="class_power_manage_1a6cc478738b54fbbd148122c4ae6e93fb" kindref="member">PowerManage::UpdateEnabled</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="_log_8h_1a45213472c513e9160481979a237b50fe" kindref="member">LOG</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778ab9f002c6ffbfd511da8090213227454e" kindref="member">LOG_DEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Kicking<sp/>Watchdog&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237" kindref="member">watchdog</ref>.kick();</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="_log_8h_1a45213472c513e9160481979a237b50fe" kindref="member">LOG</ref>(<ref refid="_log_8h_1a2341a2a7c04d08eb40d2cb0b18b0b778a6e98ff471e3ce6c4ef2d75c37ee51837" kindref="member">LOG_INFO</ref>,<sp/></highlight><highlight class="stringliteral">&quot;STARTING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1a769404f2985a027a0d626fedfd4de1e9" kindref="member">Setup</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1a0ed0a336fad3c78ff60cde0dc0ba0757" kindref="member">can</ref>.attach(<ref refid="main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082" kindref="member">OnCanRec</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1aa4f4ec1bad01c8e84c6122eccfb9bbe7" kindref="member">t_state_subs</ref>.start(<ref refid="main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0" kindref="member">NewState</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1a3954245cb9a4c741ae774426178b1817" kindref="member">t_adc_main</ref>.start(callback(&amp;<ref refid="main_8cpp_1a63a2d7bfab07ad56bcc616708e1311d8" kindref="member">AdcQueue</ref>,<sp/>&amp;EventQueue::dispatch_forever));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="main_8cpp_1adaedeffa9cd68dc76b50e18ac30de0a9" kindref="member">adc_ticker</ref>.attach(<ref refid="main_8cpp_1a63a2d7bfab07ad56bcc616708e1311d8" kindref="member">AdcQueue</ref>.event(<ref refid="main_8cpp_1ac595faede462d70c3fb34417f4e984e7" kindref="member">ReadAdc</ref>),<sp/>5s);<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Skift<sp/>tid<sp/>til<sp/>macro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ThisThread::sleep_for(5s);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="188"><highlight class="comment">void<sp/>Loop(){</highlight></codeline>
<codeline lineno="189"><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment">//<sp/><sp/>Start<sp/>Watchdog</highlight></codeline>
<codeline lineno="191"><highlight class="comment">//<sp/><sp/>Watchdog<sp/>&amp;watchdog<sp/>=<sp/>Watchdog::get_instance();</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/>uint32_t<sp/>max_timeout<sp/>=<sp/>watchdog.get_max_timeout();</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/>if<sp/>(WATCHDOG_TIMEOUT<sp/>&gt;<sp/>max_timeout)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG(LOG_WARNING,&quot;Watchdog<sp/>timeout<sp/>too<sp/>long,<sp/>setting<sp/>to<sp/>&quot;<sp/>+<sp/>to_string(max_timeout));</highlight></codeline>
<codeline lineno="195"><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG(LOG_DEBUG,<sp/>&quot;Starting<sp/>watchdog<sp/>with<sp/>timeout<sp/>&quot;<sp/>+<sp/>to_string(max_timeout));</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/>watchdog.start(max_timeout);</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/>LOG(LOG_DEBUG,<sp/>&quot;Starting<sp/>watchdog<sp/>with<sp/>timeout<sp/>&quot;<sp/>+<sp/>to_string(WATCHDOG_TIMEOUT));</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/>watchdog.start(WATCHDOG_TIMEOUT);</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">//<sp/><sp/>Get<sp/>current<sp/>state</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/>LOG(LOG_DEBUG,<sp/>&quot;Getting<sp/>Current<sp/>State&quot;);</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/>Fsm::State<sp/>current_state<sp/>=<sp/>Fsm::GetCurrentState();</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/>LOG(LOG_INFO,<sp/>&quot;Current<sp/>State:<sp/>&quot;<sp/>+<sp/>Fsm::ToString());</highlight></codeline>
<codeline lineno="207"><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/>LOG(LOG_DEBUG,<sp/>&quot;Reading<sp/>ADC<sp/>values<sp/>by<sp/>state&quot;);</highlight></codeline>
<codeline lineno="209"><highlight class="comment">//<sp/><sp/>Read<sp/>ADC<sp/>Values</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/>AdcRead::adc_reading<sp/>new_read<sp/>=<sp/>AdcRead::DoRead();</highlight></codeline>
<codeline lineno="211"><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/>LOG(LOG_DEBUG,<sp/>&quot;Updating<sp/>state<sp/>by<sp/>ADC<sp/>readings&quot;);</highlight></codeline>
<codeline lineno="213"><highlight class="comment">//<sp/><sp/>Set<sp/>new<sp/>State</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/>Fsm::DetermineState(new_read);</highlight></codeline>
<codeline lineno="215"><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/>LOG(LOG_DEBUG,<sp/>&quot;Updating<sp/>enabled<sp/>power<sp/>rails<sp/>by<sp/>state&quot;);</highlight></codeline>
<codeline lineno="217"><highlight class="comment">//<sp/><sp/>Update<sp/>enabled<sp/>rails</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/>PowerManage::UpdateEnabled();</highlight></codeline>
<codeline lineno="219"><highlight class="comment"></highlight></codeline>
<codeline lineno="220"><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/>LOG(LOG_DEBUG,<sp/>&quot;Stopping<sp/>watchdog&quot;);</highlight></codeline>
<codeline lineno="222"><highlight class="comment">//<sp/><sp/>Stop<sp/>Watchdog</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/>watchdog.stop();</highlight></codeline>
<codeline lineno="224"><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/>LOG(LOG_DEBUG,<sp/>&quot;Starting<sp/>Deep<sp/>Sleep&quot;);</highlight></codeline>
<codeline lineno="226"><highlight class="comment">//<sp/><sp/>Deep<sp/>Sleep</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/>ThisThread::sleep_for(5s);</highlight></codeline>
<codeline lineno="228"><highlight class="comment"></highlight></codeline>
<codeline lineno="229"><highlight class="comment">};</highlight></codeline>
<codeline lineno="230"><highlight class="comment"></highlight></codeline>
<codeline lineno="231"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Testing();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//#pragma<sp/>ide<sp/>diagnostic<sp/>ignored<sp/>&quot;EndlessLoop&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>while<sp/>(true)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Loop();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Hej<sp/>Abber<sp/>Labber<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//▬▬▬.◙.▬▬▬</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//═▂▄▄▓▄▄▂</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//◢◤<sp/>█▀▀████▄▄▄▄◢◤</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//█▄<sp/>█<sp/>█▄<sp/>███▀▀▀▀▀▀▀╬</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//◥█████◤</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//══╩══╩═</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//╬═╬</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//╬═╬</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//╬═╬</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//╬═╬<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hello?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//╬═╬<sp/><sp/>☻/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//╬═╬<sp/>/▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//╬═╬<sp/>/<sp/>\</highlight></codeline>
    </programlisting>
    <location file="src/main.cpp"/>
  </compounddef>
</doxygen>
