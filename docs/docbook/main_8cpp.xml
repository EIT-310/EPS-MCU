<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_main_8cpp" xml:lang="en-US">
<title>src/main.cpp File Reference</title>
<indexterm><primary>src/main.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;mbed.h&quot;
#include &quot;Fsm.h&quot;
#include &quot;NVStore.h&quot;
#include &quot;AdcRead.h&quot;
#include &quot;mbed_stats.h&quot;
#include &lt;ProjectConfig.h&gt;
#include &quot;Interrupt.h&quot;
#include &quot;PowerManage.h&quot;
#include &quot;Log.h&quot;
#include &quot;CanCom.h&quot;
#include &quot;reading.pb.h&quot;
#include &quot;NoMutexCAN.h&quot;
#include &quot;rtos.h&quot;
</programlisting>Include dependency graph for main.cpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>Thread <link linkend="_main_8cpp_1a8088721061b22d3a703b809282db158a">t_can_handler</link> (osPriorityNormal, OS_STACK_SIZE, nullptr,&quot;CAN Handler&quot;)</para>
</listitem>
            <listitem><para>Thread <link linkend="_main_8cpp_1a9da7aec02ec673a8b5ecdf4510f106c1">t_ISR_handler</link> (osPriorityISR, 1024, nullptr, &quot;OCE Handler&quot;)</para>
</listitem>
            <listitem><para>Thread <link linkend="_main_8cpp_1a3954245cb9a4c741ae774426178b1817">t_adc_main</link> (osPriorityNormal, 1024, nullptr,&quot;ADC Handler&quot;)</para>
</listitem>
            <listitem><para>Thread <link linkend="_main_8cpp_1aa4f4ec1bad01c8e84c6122eccfb9bbe7">t_state_subs</link> (osPriorityNormal, 1024, nullptr,&quot;State Updater&quot;)</para>
</listitem>
            <listitem><para><link linkend="_class_oce_isr">OceIsr</link> <link linkend="_main_8cpp_1a6c214e618015d093ba8590729563c33c">oce1</link> (OCE_1_PIN, &amp;<link linkend="_main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25">IsrQueue</link>, <link linkend="_class_power_manage_1a1f54cee055bd53d7a4e29f04d86e292eab2f595058775d24b388a331e4cef6bd6">PowerManage::SUB_1</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1ac595faede462d70c3fb34417f4e984e7">ReadAdc</link> ()</para>

<para>Sætter ADC måling igang. Kører hvert 5. sekundt med mindre en vigtigere thread pre-empt&apos;er den. Lægger den nye måling i kø til <link linkend="_main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0">NewState()</link> </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1a1344d6ffed8b15af8c18dd7aa69d4872">UpdateSubs</link> ()</para>

<para>Opdaterer de aktiverede moduler på baggrund af ny state og kicker watchdog. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1a5c7452bc8a6f648db67fe952474d73de">StartWatchdog</link> ()</para>

<para>Starter Watchdog hvis timeout er for langt sættes den istedet til den længste tilladte værdi. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1a051cb0babede35842fcb4822fe9102f7">CanTimeSync</link> ()</para>

<para>ISR deferred handler for at decode time sync package og opdatere RTC med den modtagede værdi. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1abedbe52be05e887351f9d26921ff77cf">CanHandler</link> ()</para>

<para>ISR deferred handler der reagerer på flag fra <link linkend="_main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082">OnCanRec()</link> </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082">OnCanRec</link> ()</para>

<para>ISR deferred handler til at beslutte handling på baggrund af CAN framets ID. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1a769404f2985a027a0d626fedfd4de1e9">Setup</link> ()</para>

<para>Køres en enkelt gang når systemet starter. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0">NewState</link> ()</para>

<para>Modtager ny måling fra <link linkend="_main_8cpp_1ac595faede462d70c3fb34417f4e984e7">ReadAdc()</link> og bestemmer ny state på baggrund af disse data. </para>
</listitem>
            <listitem><para>int <link linkend="_main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>

<para>Sætter threads igang og sover. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_fsm">Fsm</link> <link linkend="_main_8cpp_1a9f4267ec33e4521e3429fe3c8d933a04">fsm</link> (<link linkend="__project_config_8h_1a69780fe091bc441b276e79d89f7acb97">FSM_START_STATE</link>)</para>
</listitem>
            <listitem><para>EventQueue <link linkend="_main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25">IsrQueue</link></para>
</listitem>
            <listitem><para>EventQueue <link linkend="_main_8cpp_1a63a2d7bfab07ad56bcc616708e1311d8">AdcQueue</link></para>
</listitem>
            <listitem><para><link linkend="_class_no_mutex_c_a_n">NoMutexCAN</link> <link linkend="_main_8cpp_1a0ed0a336fad3c78ff60cde0dc0ba0757">can</link> (CAN_RD_PIN, CAN_TD_PIN, <link linkend="__project_config_8h_1a936618a4fbd892618b0865b86a1fb22c">CAN_BITRATE</link>)</para>
</listitem>
            <listitem><para>Watchdog &amp; <link linkend="_main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237">watchdog</link> = Watchdog::get_instance()</para>
</listitem>
            <listitem><para>CANMessage <link linkend="_main_8cpp_1a6455c2bdd533574c68e203f7d1e3265d">can_time_sync</link></para>
</listitem>
            <listitem><para>CANMessage <link linkend="_main_8cpp_1ac8fa5b302ff73f9e90ee35405b112748">can_req</link></para>
</listitem>
            <listitem><para>Ticker <link linkend="_main_8cpp_1adaedeffa9cd68dc76b50e18ac30de0a9">adc_ticker</link></para>
</listitem>
            <listitem><para>Mail&lt; <link linkend="_struct_adc_read_1_1adc__reading">AdcRead::adc_reading</link>, 8 &gt; <link linkend="_main_8cpp_1a98c8c86c1543fd5370047f525d0a1f31">adc_mail</link></para>
</listitem>
            <listitem><para>bool <link linkend="_main_8cpp_1a16cedde881cfcbc26c9fb4f2ff54e033">can_time_isr</link></para>
</listitem>
            <listitem><para>bool <link linkend="_main_8cpp_1aff54455fc158126cb45ff4d8c55fa910">can_req_isr</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_main_8cpp_1abedbe52be05e887351f9d26921ff77cf"/><section>
    <title>CanHandler()</title>
<indexterm><primary>CanHandler</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>CanHandler</secondary></indexterm>
<para><computeroutput>void CanHandler ( )</computeroutput></para><para>

<para>ISR deferred handler der reagerer på flag fra <link linkend="_main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082">OnCanRec()</link> </para>
</para>

<para><note><title>Note</title>

<para>Lettere overflødig og lævn fra tidligere metode uden brug af EventQueue </para>
</note>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_abedbe52be05e887351f9d26921ff77cf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_abedbe52be05e887351f9d26921ff77cf_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1a051cb0babede35842fcb4822fe9102f7"/><section>
    <title>CanTimeSync()</title>
<indexterm><primary>CanTimeSync</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>CanTimeSync</secondary></indexterm>
<para><computeroutput>void CanTimeSync ( )</computeroutput></para><para>

<para>ISR deferred handler for at decode time sync package og opdatere RTC med den modtagede værdi. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a051cb0babede35842fcb4822fe9102f7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main ( )</computeroutput></para><para>

<para>Sætter threads igang og sover. </para>
</para>

<para><formalpara><title>Returns</title>

<para>int standard </para>
</formalpara>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0"/><section>
    <title>NewState()</title>
<indexterm><primary>NewState</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>NewState</secondary></indexterm>
<para><computeroutput>void NewState ( )</computeroutput></para><para>

<para>Modtager ny måling fra <link linkend="_main_8cpp_1ac595faede462d70c3fb34417f4e984e7">ReadAdc()</link> og bestemmer ny state på baggrund af disse data. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a3a1208bf880dbc3e596cdd55b5cbd6b0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a3a1208bf880dbc3e596cdd55b5cbd6b0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1a6c214e618015d093ba8590729563c33c"/><section>
    <title>oce1()</title>
<indexterm><primary>oce1</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>oce1</secondary></indexterm>
<para><computeroutput><link linkend="_class_oce_isr">OceIsr</link> oce1 (OCE_1_PIN , &amp; IsrQueue, <link linkend="_class_power_manage_1a1f54cee055bd53d7a4e29f04d86e292eab2f595058775d24b388a331e4cef6bd6">PowerManage::SUB_1</link> )</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1ad5d56d2ac5d86036b8a7931d829e6082"/><section>
    <title>OnCanRec()</title>
<indexterm><primary>OnCanRec</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>OnCanRec</secondary></indexterm>
<para><computeroutput>void OnCanRec ( )</computeroutput></para><para>

<para>ISR deferred handler til at beslutte handling på baggrund af CAN framets ID. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_ad5d56d2ac5d86036b8a7931d829e6082_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_ad5d56d2ac5d86036b8a7931d829e6082_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1ac595faede462d70c3fb34417f4e984e7"/><section>
    <title>ReadAdc()</title>
<indexterm><primary>ReadAdc</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>ReadAdc</secondary></indexterm>
<para><computeroutput>void ReadAdc ( )</computeroutput></para><para>

<para>Sætter ADC måling igang. Kører hvert 5. sekundt med mindre en vigtigere thread pre-empt&apos;er den. Lægger den nye måling i kø til <link linkend="_main_8cpp_1a3a1208bf880dbc3e596cdd55b5cbd6b0">NewState()</link> </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_ac595faede462d70c3fb34417f4e984e7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_ac595faede462d70c3fb34417f4e984e7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1a769404f2985a027a0d626fedfd4de1e9"/><section>
    <title>Setup()</title>
<indexterm><primary>Setup</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>Setup</secondary></indexterm>
<para><computeroutput>void Setup ( )</computeroutput></para><para>

<para>Køres en enkelt gang når systemet starter. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a769404f2985a027a0d626fedfd4de1e9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a769404f2985a027a0d626fedfd4de1e9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1a5c7452bc8a6f648db67fe952474d73de"/><section>
    <title>StartWatchdog()</title>
<indexterm><primary>StartWatchdog</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>StartWatchdog</secondary></indexterm>
<para><computeroutput>void StartWatchdog ( )</computeroutput></para><para>

<para>Starter Watchdog hvis timeout er for langt sættes den istedet til den længste tilladte værdi. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a5c7452bc8a6f648db67fe952474d73de_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1a3954245cb9a4c741ae774426178b1817"/><section>
    <title>t_adc_main()</title>
<indexterm><primary>t_adc_main</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>t_adc_main</secondary></indexterm>
<para><computeroutput>Thread t_adc_main (osPriorityNormal , 1024 , nullptr , &quot;ADC Handler&quot; )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a3954245cb9a4c741ae774426178b1817_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1a8088721061b22d3a703b809282db158a"/><section>
    <title>t_can_handler()</title>
<indexterm><primary>t_can_handler</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>t_can_handler</secondary></indexterm>
<para><computeroutput>Thread t_can_handler (osPriorityNormal , OS_STACK_SIZE , nullptr , &quot;CAN Handler&quot; )</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1a9da7aec02ec673a8b5ecdf4510f106c1"/><section>
    <title>t_ISR_handler()</title>
<indexterm><primary>t_ISR_handler</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>t_ISR_handler</secondary></indexterm>
<para><computeroutput>Thread t_ISR_handler (osPriorityISR , 1024 , nullptr , &quot;OCE Handler&quot; )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a9da7aec02ec673a8b5ecdf4510f106c1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1aa4f4ec1bad01c8e84c6122eccfb9bbe7"/><section>
    <title>t_state_subs()</title>
<indexterm><primary>t_state_subs</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>t_state_subs</secondary></indexterm>
<para><computeroutput>Thread t_state_subs (osPriorityNormal , 1024 , nullptr , &quot;State Updater&quot; )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_aa4f4ec1bad01c8e84c6122eccfb9bbe7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_main_8cpp_1a1344d6ffed8b15af8c18dd7aa69d4872"/><section>
    <title>UpdateSubs()</title>
<indexterm><primary>UpdateSubs</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>UpdateSubs</secondary></indexterm>
<para><computeroutput>void UpdateSubs ( )</computeroutput></para><para>

<para>Opdaterer de aktiverede moduler på baggrund af ny state og kicker watchdog. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a1344d6ffed8b15af8c18dd7aa69d4872_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="main_8cpp_a1344d6ffed8b15af8c18dd7aa69d4872_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_main_8cpp_1a98c8c86c1543fd5370047f525d0a1f31"/><section>
    <title>adc_mail</title>
<indexterm><primary>adc_mail</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>adc_mail</secondary></indexterm>
<para><computeroutput>Mail&lt;<link linkend="_struct_adc_read_1_1adc__reading">AdcRead::adc_reading</link>, 8&gt; adc_mail</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1adaedeffa9cd68dc76b50e18ac30de0a9"/><section>
    <title>adc_ticker</title>
<indexterm><primary>adc_ticker</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>adc_ticker</secondary></indexterm>
<para><computeroutput>Ticker adc_ticker</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1a63a2d7bfab07ad56bcc616708e1311d8"/><section>
    <title>AdcQueue</title>
<indexterm><primary>AdcQueue</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>AdcQueue</secondary></indexterm>
<para><computeroutput>EventQueue AdcQueue</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1a0ed0a336fad3c78ff60cde0dc0ba0757"/><section>
    <title>can</title>
<indexterm><primary>can</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>can</secondary></indexterm>
<para><computeroutput><link linkend="_class_can_com">CanCom</link> cancom &amp; can (CAN_RD_PIN , CAN_TD_PIN , <link linkend="__project_config_8h_1a936618a4fbd892618b0865b86a1fb22c">CAN_BITRATE</link> )</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1ac8fa5b302ff73f9e90ee35405b112748"/><section>
    <title>can_req</title>
<indexterm><primary>can_req</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>can_req</secondary></indexterm>
<para><computeroutput>CANMessage can_req</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1aff54455fc158126cb45ff4d8c55fa910"/><section>
    <title>can_req_isr</title>
<indexterm><primary>can_req_isr</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>can_req_isr</secondary></indexterm>
<para><computeroutput>bool can_req_isr</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1a16cedde881cfcbc26c9fb4f2ff54e033"/><section>
    <title>can_time_isr</title>
<indexterm><primary>can_time_isr</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>can_time_isr</secondary></indexterm>
<para><computeroutput>bool can_time_isr</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1a6455c2bdd533574c68e203f7d1e3265d"/><section>
    <title>can_time_sync</title>
<indexterm><primary>can_time_sync</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>can_time_sync</secondary></indexterm>
<para><computeroutput>CANMessage can_time_sync</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1a9f4267ec33e4521e3429fe3c8d933a04"/><section>
    <title>fsm</title>
<indexterm><primary>fsm</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>fsm</secondary></indexterm>
<para><computeroutput><link linkend="_class_fsm">Fsm</link> fsm(<link linkend="__project_config_8h_1a69780fe091bc441b276e79d89f7acb97">FSM_START_STATE</link>) (<link linkend="__project_config_8h_1a69780fe091bc441b276e79d89f7acb97">FSM_START_STATE</link> )</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1a6ee6423ec42a45faf59c779d64ecad25"/><section>
    <title>IsrQueue</title>
<indexterm><primary>IsrQueue</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>IsrQueue</secondary></indexterm>
<para><computeroutput>EventQueue IsrQueue</computeroutput></para></section>
<anchor xml:id="_main_8cpp_1a415458cba5bf50c42f8bd5c9548cc237"/><section>
    <title>watchdog</title>
<indexterm><primary>watchdog</primary><secondary>main.cpp</secondary></indexterm>
<indexterm><primary>main.cpp</primary><secondary>watchdog</secondary></indexterm>
<para><computeroutput>Watchdog&amp; watchdog = Watchdog::get_instance()</computeroutput></para></section>
</section>
</section>
